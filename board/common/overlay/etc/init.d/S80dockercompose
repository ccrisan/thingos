#!/bin/bash

SYS_CONF=/etc/docker-compose.yml
BOOT_CONF=/boot/docker-compose.yml
USER_CONF=/data/etc/docker-compose.yml

SYS_ENV=/etc/docker-compose.env
BOOT_ENV=/boot/docker-compose.env
USER_ENV=/data/etc/docker-compose.env

DOCKER=/usr/bin/docker
LOG=/var/log/docker-compose.log

PROJ=system
RUN_DIR=/var/run/docker-compose
ENV_FILE=/tmp/docker-compose.env

test -x ${DOCKER} || exit 0
test -n "${OS_VERSION}" || source /etc/init.d/base
CONF=$(append_conf ${SYS_CONF} ${BOOT_CONF} ${USER_CONF})
test -n "${CONF}" || exit 0

function make_env_file() {
    echo -n > ${ENV_FILE}
    for env_file in ${SYS_ENV} ${BOOT_ENV} ${USER_ENV}; do
        test -s ${env_file} && cat ${env_file} >> ${ENV_FILE}
    done
}

function start() {
    msg_begin "Starting docker-compose"
    
    # Wait for dockerd to start
    running=false
    for ((i=0; i < 30; i++)); do
        if docker ps &>/dev/null; then
            running=true
            break
        fi
        sleep 1
    done
    
    if [[ ${running} != true ]]; then
        msg_fail "dockerd not running"
        return
    fi

    mkdir -p ${RUN_DIR}
    export COMPOSE_HTTP_TIMEOUT=600
    
    make_env_file
    conf=$(echo ${CONF} | sed 's/ / -f /g')
    
    ${DOCKER} compose --env-file ${ENV_FILE} -p ${PROJ} --project-directory ${RUN_DIR} -f ${conf} pull &>${LOG}
    ${DOCKER} compose --env-file ${ENV_FILE} -p ${PROJ} --project-directory ${RUN_DIR} -f ${conf} up --no-start &>>${LOG}
    ${DOCKER} compose --env-file ${ENV_FILE} -p ${PROJ} --project-directory ${RUN_DIR} -f ${conf} up -d &>>${LOG}
    test $? == 0 && msg_done || msg_fail
}

function stop() {
    msg_begin "Stopping docker-compose"
    
    make_env_file
    conf=$(echo ${CONF} | sed 's/ / -f /g')

    ${DOCKER} compose --env-file ${ENV_FILE} -p ${PROJ} --project-directory ${RUN_DIR} -f ${conf} stop &>>${LOG}
    test $? == 0 && msg_done || msg_fail
}

function pull() {
    msg_begin "Pulling docker-compose images"
    
    make_env_file
    conf=$(echo ${CONF} | sed 's/ / -f /g')
    export COMPOSE_HTTP_TIMEOUT=600

    ${DOCKER} compose --env-file ${ENV_FILE} -p ${PROJ} --project-directory ${RUN_DIR} -f ${conf} pull &>>${LOG}
    test $? == 0 && msg_done || msg_fail
}

case "$1" in
    start)
        start
        ;;

    stop)
        stop
        ;;
    
    restart)
        stop
        start
        ;;

    pull)
        pull
        ;;
    
    *)
        echo "Usage: $0 {start|stop|restart|pull}"
        exit 1
        ;;
esac

exit $?
